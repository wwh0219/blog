import{r as a,o as p,c as t,a as n,b as o,F as e,d as c,e as l}from"./app.a140cb59.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=c(`<h1 id="\u4F7F\u7528rxjs\u7BA1\u7406\u679A\u4E3E\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528rxjs\u7BA1\u7406\u679A\u4E3E\u6570\u636E" aria-hidden="true">#</a> \u4F7F\u7528rxjs\u7BA1\u7406\u679A\u4E3E\u6570\u636E</h1><h2 id="\u80CC\u666F" tabindex="-1"><a class="header-anchor" href="#\u80CC\u666F" aria-hidden="true">#</a> \u80CC\u666F\uFF1A</h2><p>B\u7AEF\u7CFB\u7EDF\u5F80\u5F80\u4E1A\u52A1\u590D\u6742\uFF0C\u6A21\u5757\u6570\u91CF\u591A\uFF0C\u8BB8\u591A\u4E1A\u52A1\u573A\u666F\u90FD\u9700\u8981\u4F7F\u7528\u7531\u670D\u52A1\u7AEF\u4E0B\u53D1\u7684\u679A\u4E3E\u6570\u636E\uFF0C\u4F8B\u5982\uFF1A</p><ul><li>\u5217\u8868\u641C\u7D22\u65F6\u6240\u9700\u7684\u9009\u9879\u6570\u636E</li><li>\u521B\u5EFA\u8868\u5355\u65F6\u6240\u9700\u7684\u9009\u9879\u6570\u636E</li></ul><p>\u5F53\u8FD9\u4E9B\u6570\u636E\u6765\u6E90\u6BD4\u8F83\u5C11\u65F6\u53EF\u4EE5\u901A\u8FC7\u5728\u7CFB\u7EDF\u521D\u59CB\u5316\u65F6\u4E00\u6B21\u6027\u52A0\u8F7D\u5E76\u5199\u5165store\u8FDB\u884C\u8C03\u7528\uFF0C\u4F46\u662F\u5F53\u6570\u636E\u6765\u6E90\u53D8\u591A\u65F6\u4F1A\u5B58\u5728\u4E00\u4E0B\u95EE\u9898\uFF0C<strong>\u5728\u521D\u59CB\u5316\u65F6\u4E00\u6B21\u6027\u52A0\u8F7D\u6240\u6709\u6570\u636E\u5F00\u9500\u8FC7\u5927\uFF0C\u5BFC\u81F4\u9875\u9762\u6027\u80FD\u4E0B\u964D\uFF0C<strong>\u90A3\u4E48\u8FD9\u4E2A\u65F6\u5019\u4E00\u822C\u4F1A\u8003\u8651\u6309\u9700\u52A0\u8F7D\uFF0C\u4E5F\u5C31\u662F\u5728\u9700\u8981\u7684\u9875\u9762\u4E2D\u53BB\u83B7\u53D6\u6570\u636E\u5E76\u5199\u5165store,\u8FD9\u79CD\u65B9\u6848\u4E5F\u4F1A\u5B58\u5728\u4E00\u4E2A\u95EE\u9898\uFF0C<strong>\u4F55\u65F6\u53BB\u53D1\u8D77\u8BF7\u6C42</strong>\uFF0C\u5F53\u4E00\u7EC4\u6570\u636E\u5728\u591A\u4E2A\u6A21\u5757\u95F4\u4F7F\u7528\uFF0C\u4F46\u662F\u53C8\u65E0\u6CD5\u786E\u5B9A\u54EA\u4E2A\u6A21\u5757\u4F1A\u5148\u52A0\u8F7D\u7684\u60C5\u51B5\u4E0B\u53EA\u80FD\u591F\u5728\u6BCF\u4E2A\u7528\u5230\u6570\u636E\u7684\u5730\u65B9\u53BB\u521D\u59CB\u5316\u6570\u636E\uFF0C\u4EE5vue\u9879\u76EE\u4E3A\u4F8B\uFF0C\u9700\u8981\u5728\u591A\u4E2A\u6A21\u5757\u4E2D\u90FD\u7F16\u5199</strong>dispatch action</strong>\u7684\u4EE3\u7801,\u9020\u6210\u5197\u4F59\u7684\u6837\u677F\u4EE3\u7801\u53D8\u591A\uFF0C\u5E76\u4E14\u5F53\u6570\u636E\u5B58\u50A8\u5728store\u4E2D\u540E\u67E5\u8BE2\u6570\u636E\u4E5F\u5341\u5206\u7E41\u7410\uFF0C\u8981\u4E48\u662F\u4F7F\u7528<strong>mapgetter</strong>\u7B49\u65B9\u6CD5\uFF0C\u8981\u4E48\u662F\u4F7F\u7528<strong>this.$store.state.xxxModule.xxxObj.xxxField</strong>\uFF0C\u56E0\u6B64\u672C\u6587\u5F15\u5165rxjs\u6765\u5904\u7406\u8FD9\u79CD\u573A\u666F\uFF0C\u4F7F\u5F97\u6570\u636E\u7684\u8C03\u7528\u8005\u65E0\u9700\u5173\u5FC3\u6570\u636E\u4F55\u65F6\u53BB\u52A0\u8F7D\uFF0C\u5F53\u9996\u6B21\u4F7F\u7528\u65F6\u4F1A\u81EA\u52A8\u52A0\u8F7D\u6570\u636E\u5E76\u7F13\u5B58</p><h2 id="\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848\uFF1A</h2><p>\u4F7F\u7528rxjs\u6765\u7BA1\u7406\u6B64\u7C7B\u6570\u636E\uFF0C\u5F53\u9996\u6B21\u8C03\u7528\u6570\u636E\u65F6\u4F1A\u53BB\u670D\u52A1\u7AEF\u67E5\u8BE2\uFF0C\u540E\u7EED\u64CD\u4F5C\u5219\u4F7F\u7528\u7F13\u5B58\u6570\u636E\uFF0C\u5728\u66F4\u65B0\u6570\u636E\u7684\u6A21\u5757\u624B\u52A8\u8C03\u7528update\u65B9\u6CD5\u6765\u83B7\u53D6\u6700\u65B0\u6570\u636E\uFF0C\u5177\u4F53\u4EE3\u7801\u5982\u4E0B</p><p>\u4EE5\u4E0B\u4EE3\u7801\u57FA\u4E8E rxjs 7.x\uFF0Ctypescript 4.x</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  BehaviorSubject<span class="token punctuation">,</span>
  combineLatest<span class="token punctuation">,</span>
  defer<span class="token punctuation">,</span>
  Observable<span class="token punctuation">,</span>
  <span class="token keyword">of</span><span class="token punctuation">,</span>
  Subject<span class="token punctuation">,</span>
  Subscription<span class="token punctuation">,</span>
  concat<span class="token punctuation">,</span>
  ObservableInputTuple<span class="token punctuation">,</span>
  OperatorFunction<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;rxjs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> filter<span class="token punctuation">,</span> map<span class="token punctuation">,</span> retry<span class="token punctuation">,</span> tap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;rxjs/operators&quot;</span><span class="token punctuation">;</span>
type Await<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>infer <span class="token constant">P</span><span class="token operator">&gt;</span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> type ICombinedObservableCreator<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> keyof <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> Result<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Options</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  initialValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
  realtime<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token function-variable function">update</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u521B\u5EFA\u4E00\u4E2Aapi observable\uFF0C\u5F53\u8BA2\u9605\u65F6\u53D1\u51FA\u8BF7\u6C42\uFF0C</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> createObservableApi <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token function-variable function">api</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> Options<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Result<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">defaultOptions</span><span class="token operator">:</span> Options<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">initialValue</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token literal-property property">realtime</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">mergedOptions</span><span class="token operator">:</span> Options<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>defaultOptions<span class="token punctuation">,</span>
    <span class="token operator">...</span>options<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">subscription</span><span class="token operator">:</span> Subscription<span class="token punctuation">;</span>
  type ISourceData <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ready</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
    data<span class="token operator">?</span><span class="token operator">:</span> Await<span class="token operator">&lt;</span>ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> api<span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">initialSource</span><span class="token operator">:</span> ISourceData <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ready</span><span class="token operator">:</span> mergedOptions<span class="token punctuation">.</span>initialValue <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> mergedOptions<span class="token punctuation">.</span>initialValue<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> subject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BehaviorSubject</span><span class="token punctuation">(</span>initialSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">commonOps</span><span class="token operator">:</span> OperatorFunction<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">val</span><span class="token operator">:</span> ISourceData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> val<span class="token punctuation">.</span>ready<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">val</span><span class="token operator">:</span> ISourceData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> val<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">//\u53EF\u7528\u4E8E\u624B\u52A8\u8BF7\u6C42\u670D\u52A1\u7AEFapi</span>
  <span class="token keyword">const</span> <span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    pending <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>subscription<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subscription<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> obs <span class="token operator">=</span> <span class="token function">defer</span><span class="token punctuation">(</span>api<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
      <span class="token function">retry</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">ready</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          data<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">tap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mergedOptions<span class="token punctuation">.</span>realtime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5728\u8FD9\u91CC\u4F7F\u7528\u4E00\u4E2A\u533F\u540D\u51FD\u6570\uFF0C\u56E0\u4E3Adefer\u6267\u884C\u5B8C\u6BD5\u540E\u4F1Acomplete,\u76F4\u63A5\u4F7F\u7528subject\u8BA2\u9605\u7684\u8BDD\u4F1A\u4F7Fsubject\u4E5F\u8FDB\u5165complete\u72B6\u6001</span>
      subscription <span class="token operator">=</span> obs<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        subject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u5982\u9700\u8981\u5B9E\u65F6\u6570\u636E\u5219\u4F1A\u8BA2\u9605\u8FD9\u4E2A\u6570\u636E\u6E90\uFF0C\u6BCF\u6B21\u90FD\u4F1A\u8BF7\u6C42\u670D\u52A1\u7AEF</span>
    <span class="token keyword">return</span> <span class="token function">concat</span><span class="token punctuation">(</span>
      <span class="token keyword">of</span><span class="token punctuation">(</span>initialSource<span class="token punctuation">)</span><span class="token punctuation">,</span>
      obs
      <span class="token comment">//@ts-ignore</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token operator">...</span>commonOps<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> obs <span class="token operator">=</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Observable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>mergedOptions<span class="token punctuation">.</span>realtime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> obs<span class="token punctuation">,</span>
      <span class="token function-variable function">update</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//@ts-ignore</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> subject<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token operator">...</span>commonOps<span class="token punctuation">)</span> <span class="token keyword">as</span> Subject<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">,</span>
    update<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u5BF9\u4F20\u5165\u7684createObservableApi\u8FD4\u56DE\u503C\u7EC4\u6210\u7684\u6570\u7EC4\u505A\u7EC4\u5408
 * \u5F53\u9700\u8981\u540C\u65F6\u7B49\u5F85\u591A\u4E2A\u6570\u636E\u521D\u59CB\u5316\u5B8C\u6210\u5E76\u505A\u540E\u7EED\u903B\u8F91\u5904\u7406\u65F6\u8C03\u7528
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> combineObservableApi <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">A</span> <span class="token keyword">extends</span> <span class="token class-name">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">sources</span><span class="token operator">:</span> ICombinedObservableCreator<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token constant">A</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> sources<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token keyword">as</span> ObservableInputTuple<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> combineLatest<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * \u4E0E\u4E0A\u4E00\u4E2A\u65B9\u6CD5\u7C7B\u4F3C\uFF0C\u4F46\u662F\u662F\u57FA\u4E8EPromise\u7684\u4E00\u6B21\u6027\u8BA2\u9605
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> waitObservableApiList <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">A</span> <span class="token keyword">extends</span> <span class="token class-name">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">obsApiList</span><span class="token operator">:</span> ICombinedObservableCreator<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token constant">A</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> obsApiList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> o<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token keyword">as</span> ObservableInputTuple<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result$ <span class="token operator">=</span> combineLatest<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> subscription <span class="token operator">=</span> result$<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        subscription<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        subscription<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br></div></div><p>\u4F7F\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fetchApi</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">fetching</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> apiObs<span class="token operator">=</span> <span class="token function">createObservableApi</span><span class="token punctuation">(</span>fetchApi<span class="token punctuation">)</span>
<span class="token comment">//\u8FD9\u91CC\u591A\u6B21\u8BA2\u9605\u6570\u636E\u6E90\uFF0C\u53EF\u4EE5\u770B\u5230\u53EA\u6253\u5370\u4E86\u4E00\u6B21fetching\uFF0C\u5B9E\u9645\u573A\u666F\u4E2D\u5BF9\u5E94\u8C03\u7528\u4E86\u4E00\u6B21server api</span>
apiObs<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
apiObs<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
apiObs<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u5408\u5E76\u591A\u4E2A\u6570\u636E\u6E90</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fetchApi</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fetching1&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">fetchApi2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fetching2&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> apiTest <span class="token operator">=</span> <span class="token function">createObservableApi</span><span class="token punctuation">(</span>fetchApi<span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> apiTest2 <span class="token operator">=</span> <span class="token function">createObservableApi</span><span class="token punctuation">(</span>fetchApi2<span class="token punctuation">)</span>
<span class="token keyword">const</span> result$ <span class="token operator">=</span> <span class="token function">combineObservableApi</span><span class="token punctuation">(</span>apiTest<span class="token punctuation">,</span> apiTest2<span class="token punctuation">)</span>
result$<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u53EA\u6709\u5F53\u4E24\u7EC4api\u90FD\u8BF7\u6C42\u5B8C\u6BD5\u65F6\u624D\u4F1A\u8FD0\u884C\u6B64\u5904\u7684\u4EE3\u7801</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u5173\u4E8E\u5982\u4F55\u5728vue\u9879\u76EE\u4E2D\u4F7F\u7528\u5219\u53EF\u4EE5\u53C2\u8003vue-rx\u6587\u6863</p>`,14),k={href:"https://github.com/vuejs/vue-rx",target:"_blank",rel:"noopener noreferrer"},b=l("https://github.com/vuejs/vue-rx");function m(d,y){const s=a("ExternalLinkIcon");return p(),t(e,null,[i,n("p",null,[n("a",k,[b,o(s)])])],64)}var v=u(r,[["render",m]]);export{v as default};
