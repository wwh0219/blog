import{d as n}from"./app.a140cb59.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="computed\u5B9E\u73B0\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#computed\u5B9E\u73B0\u5206\u6790" aria-hidden="true">#</a> computed\u5B9E\u73B0\u5206\u6790</h1><p>Vue\u5B9E\u4F8B\u521D\u59CB\u5316\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u6267\u884C<strong>initState(vm)<strong>\u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F\u5728\u8FD9\u91CC\u5F00\u59CB\u8FDB\u884C</strong>computed</strong>\u7684\u521D\u59CB\u5316</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initState</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span>_watchers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token function">initProps</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>props<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span> <span class="token function">initMethods</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">observe</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* asRootData */</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token function">initComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>watch <span class="token operator">&amp;&amp;</span> opts<span class="token punctuation">.</span>watch <span class="token operator">!==</span> nativeWatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initWatch</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>watch<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>computed</strong> \u662F\u901A\u8FC7\u8C03\u7528 <strong>initComputed</strong> \u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initComputed</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token literal-property property">computed</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//...</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSSR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// create internal watcher for the computed property.</span>
      watchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>
        vm<span class="token punctuation">,</span>
        getter <span class="token operator">||</span> noop<span class="token punctuation">,</span>
        noop<span class="token punctuation">,</span>
        computedWatcherOptions
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">defineComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u521D\u59CB\u5316<strong>computed</strong>\u9996\u5148\u4F1A\u521D\u59CB\u5316\u4E00\u4E2A<strong>Watcher</strong>\uFF0C\u7136\u540E\u8C03\u7528<strong>defineComputed</strong></p><p>SPA\u5E94\u7528<strong>computed</strong>\u4E3A<strong>getters</strong>\u65F6\u7684\u90E8\u5206\u4EE3\u7801\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineComputed</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">target</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">userDef</span><span class="token operator">:</span> Object <span class="token operator">|</span> Function</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> shouldCache <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> shouldCache
      <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span>userDef<span class="token punctuation">)</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> noop
  <span class="token punctuation">}</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> sharedPropertyDefinition<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u7531\u4E0A\u53EF\u77E5\u8C03\u7528\u4E86<strong>createComputedGetter</strong>\u6765\u521B\u5EFAgetter\u5E76\u6700\u7EC8<strong>Object.defineProperty</strong>\u8D4B\u503C\u7ED9vue\u5B9E\u4F8B\uFF0C\u4F7F\u5176\u53EF\u4EE5\u901A\u8FC7<strong>vm.xxx</strong>\u8BBF\u95EE\u5230<strong>computed</strong>\u7684\u8BA1\u7B97\u7ED3\u679C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createComputedGetter</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>createComputedGetter</strong>\u5C31\u662F\u521B\u5EFA <strong>computed</strong>\u7684\u6838\u5FC3\u65B9\u6CD5\uFF0C\u9996\u5148\u83B7\u53D6\u5230<strong>watcher</strong>\u5B9E\u4F8B\u4E5F\u5C31\u662F\u4E4B\u524D<strong>initComputed</strong> \u4E2D\u5B9E\u4F8B\u5316\u7684<strong>watcher</strong>\uFF0C\u6839\u636E\u521D\u59CB\u5316<strong>computed</strong>\u65F6\u7684\u53C2\u6570\u4EE5\u53CAwacher\u4E2D\u7684\u6784\u9020\u51FD\u6570\u4EE3\u7801\uFF0C\u9996\u6B21\u8BFB\u53D6<strong>computed</strong>\u7684\u503C\u65F6<strong>watcher.dirty===true</strong>,\u90A3\u4E48\u4FBF\u4F1A\u6267\u884C<strong>watcher.evaluate()</strong>\uFF0C\u800C\u8FD9\u4E2A\u65B9\u6CD5\u4E2D\u53C8\u4F1A\u6267\u884C<strong>wartcher.get(),</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> value
    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>\\
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>getter</strong> \u4FBF\u662F\u5728<strong>computed</strong>\u4E2D\u4F20\u5165\u7684\u51FD\u6570\uFF0C\u5982\u679C\u8FD9\u4E2A\u51FD\u6570\u6709\u8C03\u7528\u5230<strong>options.data</strong>\u4E0A\u9762\u7684\u503C\uFF0C\u5219\u4F1A\u8FDB\u5165<strong>reactiveGetter</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>childOb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          childOb<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">dependArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> value
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u56E0\u4E3A\u5728<strong>computed watcher</strong>\u4E2D\u6267\u884C\u4E86<strong>pushTarget</strong>\uFF0C\u6240\u4EE5\u6B64\u65F6<strong>Dep.target</strong>\u4E3A<strong>computed watcher</strong>\uFF0C\u6267\u884C<strong>dep.depend()<strong>\u4F1A\u4F7F</strong>computed watcher</strong>\u8BA2\u9605\u5F53\u524D<strong>reactiveGetter</strong>\u7684<strong>dep</strong>\uFF0C\u8FD9\u6837\u5F53\u8FD9\u4E2A\u5B57\u6BB5\u6709\u66F4\u65B0\u65F6\uFF0C\u5C31\u4F1A\u8C03\u7528<strong>watcher.update</strong>,\u5C06<strong>computed watcher</strong>\u7684<strong>dirty</strong>\u53D8\u4E3A<strong>true</strong>,\u4F7F\u5176\u4E0B\u6B21\u53D6\u503C\u65F6\u80FD\u591F\u91CD\u65B0\u8FDB\u884C\u8BA1\u7B97\uFF0C\u63A5\u7740\u7EE7\u7EED\u8FDB\u884C<strong>watcher.get</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//...</span>
    <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E0A\u4E00\u7BC7\u4E2D\u8BB2\u8FC7\uFF0C\u5728\u5B9E\u4F8B\u6E32\u67D3\u65F6\u4F1A\u5B9E\u4F8B\u5316\u4E00\u4E2A\u6E32\u67D3<strong>watcher</strong>\uFF0C\u5728\u8FD9\u4E2A<strong>watcher</strong>\u7684\u56DE\u8C03\u4E2D\u6267\u884C\u6E32\u67D3\u51FD\u6570\uFF0C\u4F1A\u8BFB\u53D6<strong>vm</strong>\u4E0A\u7684\u5B57\u6BB5\uFF0C\u4E5F\u5C31\u662F\u5728\u8FD9\u91CC\u9996\u6B21\u6267\u884C\u4E86<strong>createComputedGetter</strong>\u8FD4\u56DE\u7684<strong>getter</strong>\uFF0C\u6E32\u67D3<strong>watcher</strong>\u5B9E\u4F8B\u5316\u8FC7\u7A0B\u4E2D\u4E5F\u4F1A\u8C03\u7528<strong>pushTarget</strong>\uFF0C\u56E0\u6B64\u5728<strong>computed watcher</strong>\u4E4B\u524D\u4F1A\u6709\u4E00\u4E2A\u6E32\u67D3<strong>watcher</strong>\uFF0C\u5728computed watcher\u7684<strong>get</strong>\u65B9\u6CD5\u4E2D\u5C06\u81EA\u8EAB\u51FA\u6808\uFF0C\u6B64\u65F6\u7684<strong>Dep.target</strong>\u4E3A\u6E32\u67D3<strong>watcher</strong>\uFF0C\u4E5F\u5C31\u662F\u6267\u884C<strong>createComputedGetter</strong>\u7684\u4EE5\u4E0B\u4EE3\u7801\u7247\u6BB5\u65F6\uFF0C<strong>Dep.target</strong>\u4E3A\u6E32\u67D3<strong>watcher</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
<span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6B64\u65F6\u7ECF\u8FC7<strong>watcher.evaluate()<strong>\u4E4B\u540E</strong>watcher.deps</strong>\u5305\u542B\u4E86\u4E4B\u524D\u8BFB\u53D6\u8FC7\u7684\u6240\u6709\u5B57\u6BB5\u7684<strong>reactiveGetter</strong>\u95ED\u5305\u4E2D\u7684<strong>dep</strong>\u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//watcher</span>
<span class="token function">depend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">//Dep</span>
 <span class="token function">depend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Dep<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">addDep</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u6267\u884C<strong>watcher.depend()<strong>\u4F1A\u5C06\u4E4B\u524D\u6240\u6709</strong>reactiveGetter</strong>\u7684<strong>dep</strong>\u5BF9\u8C61\u4E0E\u6E32\u67D3<strong>watcher</strong>\u8FDB\u884C\u7ED1\u5B9A\uFF0C\u5F53\u8FD9\u4E9B<strong>reactiveSetter</strong>\u88AB\u8C03\u7528\u65F6\u4F1A\u901A\u77E5\u6240\u6709\u7684\u6E32\u67D3<strong>watcher</strong>\u8FDB\u884C\u66F4\u65B0\uFF0C\u8FD9\u4E5F\u5C31\u662F\u4E3A\u4EC0\u4E48\u6E32\u67D3\u51FD\u6570\u4E2D\u6CA1\u6709\u76F4\u63A5\u8BFB\u53D6<strong>data</strong>\u4E2D\u7684\u503C\u800C\u662F\u8BFB\u53D6\u4E86\u7ECF\u8FC7<strong>computed</strong>\u8BA1\u7B97\u7684\u503C\uFF0C\u5F53<strong>data</strong>\u6570\u636E\u66F4\u65B0\u65F6\u4E5F\u80FD\u89E6\u53D1\u8BD5\u56FE\u66F4\u65B0\uFF0C\u8BFB\u53D6\u6700\u65B0\u7684<strong>computed</strong>\u503C</p>`,22);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
